{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///./src/routes/baseRouter.ts","webpack:///./src/db/apiUserSchema.ts","webpack:///./src/db/dataAccess.ts","webpack:///external \"uuid\"","webpack:///./src/db/validClientSchema.ts","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose-unique-validator\"","webpack:///./src/db/userTypeSchema.ts","webpack:///./src/models/userType.ts","webpack:///./src/controllers/baseController.ts","webpack:///external \"crypto\"","webpack:///external \"crypto-js\"","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///./node_modules/process/browser.js","webpack:///./src/app.ts","webpack:///external \"cors\"","webpack:///external \"morgan\"","webpack:///external \"helmet\"","webpack:///./src/routes/indexRouter.ts","webpack:///./src/middleware/validateRequest.ts","webpack:///./src/db/serviceSchema.ts","webpack:///./src/models/service.ts","webpack:///./src/controllers/serviceController.ts","webpack:///./src/routes/serviceRoute.ts","webpack:///./src/db/durationSchema.ts","webpack:///./src/models/duration.ts","webpack:///./src/controllers/durationController.ts","webpack:///./src/routes/durationRouter.ts","webpack:///./src/models/apiUser.ts","webpack:///./src/controllers/apiUserController.ts","webpack:///./src/routes/apiUserRouter.ts","webpack:///./src/models/validClient.ts","webpack:///./src/controllers/validClientController.ts","webpack:///./src/routes/validClientRouter.ts","webpack:///./src/models/clientInfo.ts","webpack:///./src/controllers/clientController.ts","webpack:///./src/routes/clientInfoRouter.ts","webpack:///./src/controllers/loginController.ts","webpack:///./src/routes/loginRouter.ts","webpack:///./src/controllers/userTypeController.ts","webpack:///./src/routes/userTypeRouter.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","BaseRoute","this","title","responseData","req","res","data","locals","BASE_URL","status","send","_dataAccess__WEBPACK_IMPORTED_MODULE_0__","_config_db_config_json__WEBPACK_IMPORTED_MODULE_1__","mongoose__WEBPACK_IMPORTED_MODULE_2__","mongoose_unique_validator__WEBPACK_IMPORTED_MODULE_3__","crypto__WEBPACK_IMPORTED_MODULE_4__","jsonwebtoken__WEBPACK_IMPORTED_MODULE_5__","ApiUserSchema","_schema","id","type","String","index","required","username","lowercase","match","unique","email","firstName","lastName","salt","password_hash","userTypeId","Types","ObjectId","ref","active","Boolean","default","tokenValidated","validationToken","timestamps","plugin","message","methods","matchPasswordCriteria","password","expiresIn","days","_date","Date","setDate","getDate","setPassword","toString","hash","update","hashValue","digest","console","error","generateValidationToken","_expires","_token","exp","_a","validPassword","model","dbConnection","schema","process","mongoose__WEBPACK_IMPORTED_MODULE_0__","DataAccess","connect","_this","options","useNewUrlParser","useCreateIndex","useFindAndModify","autoIndex","autoReconnect","reconnectTries","Number","MAX_VALUE","reconnectInterval","poolSize","bufferMaxEntries","connectTimeoutMS","socketTimeoutMS","family","user","pass","dbName","dbInstance","Promise","resolve","reject","establish","instance","_conn","once","log","on","err","close","then","catch","mongoose_unique_validator__WEBPACK_IMPORTED_MODULE_2__","mongoose__WEBPACK_IMPORTED_MODULE_3__","jsonwebtoken__WEBPACK_IMPORTED_MODULE_4__","UserTypeSchema","ipAddress","validate","description","contactName","phoneNumber","token","retuired","today","_exp","getFullYear","_id","address","getTime","mongoose_unique_validator__WEBPACK_IMPORTED_MODULE_1__","display","UserType","BaseController","_config_transport_config_json__WEBPACK_IMPORTED_MODULE_0__","crypto_js__WEBPACK_IMPORTED_MODULE_1__","encryptData","encrypt","decryptData","decrypt","Utf8","mongoIdObject","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","express__WEBPACK_IMPORTED_MODULE_0__","cors__WEBPACK_IMPORTED_MODULE_1__","morgan__WEBPACK_IMPORTED_MODULE_2__","body_parser__WEBPACK_IMPORTED_MODULE_3__","helmet__WEBPACK_IMPORTED_MODULE_4__","_routes_indexRouter__WEBPACK_IMPORTED_MODULE_5__","_middleware_validateRequest__WEBPACK_IMPORTED_MODULE_6__","_routes_loginRouter__WEBPACK_IMPORTED_MODULE_7__","_routes_userTypeRouter__WEBPACK_IMPORTED_MODULE_8__","_routes_apiUserRouter__WEBPACK_IMPORTED_MODULE_9__","_routes_validClientRouter__WEBPACK_IMPORTED_MODULE_10__","_routes_serviceRoute__WEBPACK_IMPORTED_MODULE_11__","_routes_durationRouter__WEBPACK_IMPORTED_MODULE_12__","_routes_clientInfoRouter__WEBPACK_IMPORTED_MODULE_13__","App","server","configureMiddleware","routes","use","extended","disable","all","router","map","port","host","listen","IndexRoute","_super","__extends","next","_baseRouter__WEBPACK_IMPORTED_MODULE_0__","ValidateRequest","jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__","_db_validClientSchema__WEBPACK_IMPORTED_MODULE_2__","body","access_token","query","headers","trim","forwarded","connection","remoteAddress","_decoded","now","findById","serviceSchema_ServiceSchema","ServiceSchema","external_mongoose_","shortDescription","serviceSchema","dataAccess","serviceController","ServiceController","getAll","find","_data","mapItems","getOne","params","mapItem","_model","service","external_uuid_","shortDesc","findByIdAndUpdate","deactivate","serviceRoute_ServiceRoute","ServiceRoute","post","put","delete","baseRouter","durationSchema_DurationSchema","DurationSchema","price","external_mongoose_unique_validator_","durationSchema","durationController","DurationController","duration","disp","durationRouter_DurationRoute","DurationRoute","apiUserController","ApiUserController","apiUserSchema","aggregate","$match","$lookup","from","localField","foreignField","as","$sort","$limit","exec","_targetType_1","userTypeSchema","findOne","_firstName","_lastName","apiUser","JSON","parse","stringify","_type","userType","baseController","apiUserRouter_ApiUserRoute","ApiUserRoute","apiUserRouter_extends","validClientController","ValidClientController","validClientSchema","contactname","ipaddress","phonenumber","fdnq","validClient","validClientRouter_ValidClientRoute","ValidClientRoute","clientController","clientInfo","hostname","ip","forwared","clientInfoRouter_ClientInfoRoute","ClientInfoRoute","controllers_loginController","loginController","login","resetPassword","validateEmailToken","external_jsonwebtoken_","db_config","loginRouter_LoginRoute","LoginRoute","loginRouter_extends","userTypeController","UserTypeController","desc","_userType","userTypeRouter_UserTypeRoute","UserTypeRoute"],"mappings":"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","file":"tyler.api.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","module.exports = require(\"mongoose\");","import {NextFunction, Request, Response} from 'express';\n\nexport class BaseRoute {\n    protected title: string;\n\n    constructor() {\n        this.title = \"Welcome to Tyler-CMT Api\";\n    }\n\n   \n\n    public responseData(req: Request, res: Response, data?: Object) {\n        res.locals.BASE_URL = \"/\";\n        res.locals.title = this.title;\n        res.status(200);\n        res.send(data);\n    }\n}","import { IApiUser } from \"./interfaces\";\nimport dataAccess from \"./dataAccess\";\nimport * as configInfo from \"../config/db.config.json\";\nimport * as mongoose from \"mongoose\";\nimport * as validator from \"mongoose-unique-validator\";\nimport * as crypto from \"crypto\";\nimport * as jwt from \"jsonwebtoken\";\n\nexport class ApiUserSchema {\n  salt?: string;\n  password_hash?: string;\n  id?: mongoose.Types.ObjectId;\n  username?: string;\n  email?: string;\n  firstName?: string;\n  userTypeId?: mongoose.Types.ObjectId;\n  lastName?: string;\n  active?: boolean;\n  emailValidated?: boolean;\n\n  public get schema(): mongoose.Schema {\n    const _schema = new mongoose.Schema(\n      {\n        id: {\n          type: String,\n          index: true,\n          required: [true, \"is required\"]\n        },\n        username: {\n          type: String,\n          lowercase: true,\n          required: [true, \"is required\"],\n          match: [/[a-zA-Z0-9-_]{5,20}\\w+/, \"is invalid\"],\n          unique: true,\n          index: true\n        },\n        email: {\n          type: String,\n          lowercase: true,\n          required: [true, \"is required\"],\n          match: [/\\S+@\\S+\\.\\S+/, \"is invalid\"],\n          unique: true,\n          index: true\n        },\n        firstName: {\n          type: String,\n          required: [true, \"is required\"],\n          index: true\n        },\n        lastName: {\n          type: String,\n          required: [true, \"is required\"],\n          index: true\n        },\n        salt: {\n          type: String\n        },\n        password_hash: {\n          type: String,\n          index: true\n        },\n        userTypeId: {\n          type: mongoose.Schema.Types.ObjectId,\n          required: true,\n          index: true,\n          ref: 'UserTypes',\n        },\n        active: {\n          type: Boolean,\n          default: true\n        },\n        tokenValidated: {\n          type: Boolean,\n          default: false\n        },\n        validationToken: {\n          type: String,\n          index: true\n        }\n      },\n      { timestamps: true }\n    );\n\n    _schema.plugin(validator, { message: \"is already taken\" });\n\n    _schema.methods.matchPasswordCriteria = function(\n      password: string\n    ): RegExpMatchArray | null {\n      return password.match(configInfo.passwordMatchCriteria);\n    };\n\n    _schema.methods.expiresIn = (days: number): number => {\n      const _date = new Date();\n      return _date.setDate(_date.getDate() + days);\n    };\n\n    _schema.methods.setPassword = function(password: string): boolean {\n      if (_schema.methods.matchPasswordCriteria(password)) {\n        \n        this.salt = crypto.randomBytes(16).toString(\"hex\");\n        \n        const hash = crypto.createHmac('sha512', this.salt);\n        hash.update(password);\n        var hashValue = hash.digest('hex');\n\n        if(!hashValue) return false;\n\n        this.password_hash = hashValue;\n\n        return true;\n      } else {\n        console.error(\"password\", \"does not match criteria\");\n        return false;\n      }\n    };\n\n    _schema.methods.generateValidationToken = function() {\n      const _expires = _schema.methods.expiresIn(1);\n\n      try {\n        const _token = jwt.sign(\n          {\n            username: this.username,\n            exp: _expires\n          },\n          configInfo.secret\n        );\n\n        this.tokenValidated = false;\n        this.validationToken = _token;\n\n        return _token;\n      } catch {\n        return null;\n      }\n    };\n\n    _schema.methods.validPassword = function(password: string): boolean {\n      if (!password) return false;\n      const hash = crypto.createHmac('sha512', this.salt);\n      hash.update(password);\n      var hashValue = hash.digest('hex');\n      return this.password_hash === hashValue;\n    };\n\n    return _schema;\n  }\n}\n\nconst model = dataAccess.dbConnection.model<IApiUser>(\n  \"apiUsers\",\n  new ApiUserSchema().schema\n);\nexport default model;\n","import * as mongoose from \"mongoose\";\nimport * as dbConfig from \"../config/db.config.json\";\n\nexport class DataAccess {\n  public static dbConnection: mongoose.Connection;\n  private static dbInstance: Promise<typeof mongoose>;\n\n  static connect() {\n    const options = {\n      useNewUrlParser: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      autoIndex: false, // Don't build indexes\n      autoReconnect: true,\n      reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n      reconnectInterval: 500, // Reconnect every 500ms\n      poolSize: 10, // Maintain up to 10 socket connections\n      // If not connected, return errors immediately rather than waiting for reconnect\n      bufferMaxEntries: 0,\n      connectTimeoutMS: 10000, // Give up initial connection after 10 seconds\n      socketTimeoutMS: 45000, // Close sockets after 45 seconds of inactivity\n      family: 4, // Use IPv4, skip trying IPv6\n      user: dbConfig.mongoUser,\n      pass: dbConfig.mongoPass,\n      dbName: dbConfig.mongoDb\n    };\n\n    const connection = () => {\n      return new Promise((resolve, reject) => {\n        const establish = (instance: Promise<typeof mongoose>) => {\n          const _conn = mongoose.connect(dbConfig.mongoEndpoint, options);\n\n          if (_conn) {\n            reject(\"DB connection failure\");\n          } else {\n            instance = _conn;\n            resolve(\"connected\");\n          }\n        };\n\n        this.dbConnection = mongoose.connection;\n        this.dbConnection.once(\"open\", () => {\n          console.log(\"Connected to mongodb\");\n        });\n\n        this.dbConnection.on(\"error\", err => {\n          console.error(\n            `Mongoode default connection has occured  ${err} error`\n          );\n        });\n\n        mongoose.connection.once(\"disconnected\", () => {\n          console.log(\"Mongoose default connection disconnected\");\n          establish(this.dbInstance);\n        });\n\n        mongoose.connection.once(\"reconnected\", () => {\n          console.log(\"Mongoose default connection reconnected\");\n        });\n\n        process.on(\"SIGINT\", () => {\n          this.dbConnection.close(() => {\n            console.log(\"db connection\", \"Mongoose default connection\");\n          });\n        });\n\n        establish(this.dbInstance);\n      });\n    };\n\n    if (this.dbInstance) {\n      return this.dbInstance;\n    } else {\n      connection()\n        .then(() => {\n          return this.dbInstance;\n        })\n        .catch((err: Error) => {\n          return err;\n        });\n    }\n\n    return null;\n  }\n}\n\nDataAccess.connect();\nexport default DataAccess;\n","module.exports = require(\"uuid\");","import { IValidClient } from \"./interfaces\";\nimport dataAccess from \"./dataAccess\";\nimport * as configInfo from \"../config/db.config.json\";\nimport * as validator from \"mongoose-unique-validator\";\nimport * as mongoose from \"mongoose\";\nimport * as jwt from \"jsonwebtoken\";\n\nexport class UserTypeSchema {\n  id?: string;\n  ipAddress?: string;\n  name?: string;\n  description?: string;\n  contactName?: string;\n  email?: string;\n  phoneNumber?: number;\n  token?: string;\n  active?: boolean;\n\n  public get schema(): mongoose.Schema {\n    const _schema = new mongoose.Schema(\n      {\n        id: {\n          type: String,\n          index: true,\n          required: [true, \"is required\"]\n        },\n        ipAddress: {\n          type: String,\n          required: [true, \"is required\"],\n          validate: [\n            /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n            \"is invalid\"\n          ],\n          index: true\n        },\n        name: {\n          type: String,\n          required: [true, \"is required\"],\n          lowercase: true,\n          unique: true\n        },\n        description: {\n          type: String,\n          required: [true, \"is required\"]\n        },\n        contactName: {\n          type: String,\n          required: [true, \"is required\"]\n        },\n        email: {\n          type: String,\n          lowercase: true,\n          required: [true, \"is required\"],\n          validate: [/\\S+@\\S+\\.\\S+/, \"is invalid\"],\n          index: true\n        },\n        phoneNumber: {\n          type: String,\n          required: [true, \"is required\"],\n          validate: [\n            /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n            \"is invalid\"\n          ],\n          index: true\n        },\n        token: {\n          type: String,\n          index: true\n        },\n        active: {\n          type: Boolean,\n          retuired: true,\n          required: [true, \"is required\"]\n        }\n      },\n      { timestamps: true }\n    );\n\n    _schema.plugin(validator, { message: \"is already taken\" });\n\n    _schema.methods.generateValidationToken = function() {\n      const today = new Date();\n      let _exp = new Date(today);\n      _exp.setDate(today.getFullYear() + 5);\n\n      try {\n        const _token = jwt.sign(\n          {\n            id: this._id,\n            address: this.ipAddress,\n            exp: _exp.getTime()\n          },\n          configInfo.secret\n        );\n\n        this.token = _token;\n\n        return _token;\n      } catch {\n        return null;\n      }\n    };\n\n    return _schema;\n  }\n}\n\nconst model = dataAccess.dbConnection.model<IValidClient>(\n  \"ValidClients\",\n  new UserTypeSchema().schema\n);\nexport default model;\n","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose-unique-validator\");","import { IUserType } from \"./interfaces\";\nimport dataAccess from \"./dataAccess\";\nimport * as validator from \"mongoose-unique-validator\";\nimport * as mongoose from \"mongoose\";\n\nexport class UserTypeSchema {\n  id?: string;\n  display?: string;\n  description?: string;\n  active?: boolean;\n\n  public get schema(): mongoose.Schema {\n    const _schema = new mongoose.Schema(\n      {\n        id: {\n          type: String,\n          index: true,\n          required: [true, \"is required\"]\n        },\n        display: {\n          type: String,\n          required: [true, \"is required\"],\n          lowercase: true,\n          unique: true\n        },\n        description: {\n          type: String,\n          required: [true, \"is required\"]\n        },\n        active: {\n          type: Boolean,\n          retuired: true,\n          required: [true, \"is required\"]\n        }\n      },\n      { timestamps: true }\n    );\n\n    _schema.plugin(validator, { message: \"is already taken\" });\n\n    return _schema;\n  }\n}\n\nconst model = dataAccess.dbConnection.model<IUserType>(\n  \"UserTypes\",\n  new UserTypeSchema().schema\n);\nexport default model;\n","export default class UserType {\n    id?: string;\n    display?: string;\n    description?: string;\n    active?: boolean;\n  }\n  ","import * as transportConfig from '../config/transport.config.json'\nimport * as crypto from 'crypto-js'\nimport {Types} from \"mongoose\";\n\n\nexport  class BaseController {\n    constructor() {\n    }\n\n    protected encryptData(data: string): string {\n        var _data = crypto.AES.encrypt(data, transportConfig.transportSecret);\n        return _data.toString();\n    }\n\n    protected decryptData(data: string): string {\n        var _data = crypto.AES.decrypt(data, transportConfig.transportSecret);\n        var _plaintext = _data.toString(crypto.enc.Utf8);\n        return _plaintext;\n    }\n\n    protected mongoIdObject(data: string) {\n        var _id = Types.ObjectId(data);\n        return _id;\n    }\n}\n\nexport default new BaseController();","module.exports = require(\"crypto\");","module.exports = require(\"crypto-js\");","module.exports = require(\"express\");","module.exports = require(\"body-parser\");","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import * as express from 'express'\nimport * as cors from 'cors';\nimport * as logger from 'morgan';\nimport * as bodyParser from 'body-parser';\nimport * as helmet from 'helmet';\nimport { IndexRoute } from './routes/indexRouter';\nimport { ValidateRequest } from './middleware/validateRequest';\nimport { LoginRoute } from './routes/loginRouter';\nimport { UserTypeRoute } from './routes/userTypeRouter';\nimport { ApiUserRoute } from './routes/apiUserRouter';\nimport { ValidClientRoute } from './routes/validClientRouter';\nimport { ServiceRoute } from './routes/serviceRoute';\nimport { DurationRoute } from './routes/durationRouter';\nimport { ClientInfoRoute } from './routes/clientInfoRouter';\n\nexport class App {\n  private server: express.Application;\n  \n  constructor() {\n    process.title = \"tyler-cmt-api\";\n    this.server = express();\n    this.configureMiddleware();\n    this.routes();\n  }\n\n  private configureMiddleware() {\n    this.server.use(logger('dev'));\n    this.server.use(bodyParser.urlencoded({ extended: false }));\n    this.server.use(bodyParser.json()); \n    this.server.use(helmet());\n    this.server.disable('x-powered-by');\n    this.server.all('/*', cors());\n    this.server.all('/v1/*', ValidateRequest.validate);\n  }\n\n  private routes() {\n    \n    const router = express.Router();\n\n    ClientInfoRoute.map(router);\n    IndexRoute.map(router);\n    LoginRoute.map(router);\n    ApiUserRoute.map(router);\n    UserTypeRoute.map(router);\n    ValidClientRoute.map(router);\n    ServiceRoute.map(router);\n    DurationRoute.map(router);\n    \n    this.server.use(router);\n    \n  }\n\n  public run(port: number, host: string) {\n    this.server.listen(port, host, () => {\n      console.log(`listening on port: ${port}`);\n    });\n  }\n\n}\n\nexport default new App();","module.exports = require(\"cors\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","import { BaseRoute } from \"./baseRouter\";\nimport { Router, Request, Response, NextFunction } from \"express\";\n\nexport class IndexRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/', (req: Request, res: Response, next: NextFunction) => {\n            new IndexRoute().index(req, res, next);\n        });\n    }\n\n    public index(req: Request, res: Response, next: NextFunction) {\n        this.title = 'Index | Tyler-CMT';\n\n        let data: Object = {\n            \"message\": \"Welcome!\"\n        }\n\n        this.responseData(req, res, data);\n    }\n}","import { NextFunction, Request, Response } from \"express\";\nimport * as jwt from \"jsonwebtoken\";\nimport * as config from \"../config/db.config.json\";\nimport { IDecoded, IApiUser } from \"../db/interfaces.js\";\nimport Schema from \"../db/validClientSchema\";\n\nexport class ValidateRequest {\n  static validate(req: Request, res: Response, next: NextFunction) {\n    const token = (\n      (req.body && req.body.access_token) ||\n      (req.query && req.query.access_token) ||\n      req.headers[\"x_access_token\"]\n    )\n      .toString()\n      .trim();\n\n    const address =\n      req.headers && req.headers.forwarded\n        ? req.headers.forwarded\n        : req.connection.remoteAddress;\n\n    if (!token || !address) {\n      return res.status(400).send({ message: \"Invalid token or address\" });\n    } else {\n      try {\n        const _decoded = <IDecoded>jwt.verify(token, config.secret);\n        if (!_decoded) {\n          return res.status(400).send({ message: \"Decoding error\" });\n        } else {\n          if (_decoded.exp <= Date.now()) {\n            return res.status(400).send({ message: \"Token Expired\" });\n          }\n\n          if (address !== _decoded.address) {\n            return res.status(400).send({ message: \"Unauthorized address\" });\n          }\n\n          Schema.findById(_decoded.id, (err: Error, data: IApiUser) => {\n            if (err) return res.status(400).send(err.message);\n\n            if (data && data.active) {\n              return next();\n            } else {\n              return res.status(417).send({ message: \"Inactive token\" });\n            }\n          });\n\n          return;\n        }\n      } catch (err) {\n        return res.status(400).send({ message: err.message });\n      }\n    }\n  }\n}\n\nexport default new ValidateRequest();\n","import { IService } from \"./interfaces\";\nimport dataAccess from \"./dataAccess\";\nimport * as mongoose from \"mongoose\";\n\nexport class ServiceSchema {\n  id?: mongoose.Types.ObjectId;\n  service?: string;\n  description?: string;\n  shortDescription?: string;\n  active?: boolean;\n\n  public get schema(): mongoose.Schema {\n    const _schema = new mongoose.Schema(\n      {\n        id: {\n          type: String,\n          required: [true, \"is required\"],\n          index: true\n        },\n        description: {\n          type: String,\n          required: [true, \"is required\"]\n        },\n        shortDescription: {\n          type: String,\n          required: [true, \"is required\"]\n        },\n        active: {\n          type: Boolean,\n          required: [true, \"is required\"],\n          default: true,\n          index: true\n        }\n      },\n      { timestamps: true }\n    );\n\n    return _schema;\n  }\n}\n\nconst model = dataAccess.dbConnection.model<IService>(\n  \"Services\",\n  new ServiceSchema().schema\n);\nexport default model;\n","export default class ApiType {\n    id?: string;\n    description?: string;\n    shortDescription?: string;\n    active?: boolean;\n  }\n  ","import { Request, Response } from \"express\";\nimport * as uuid from \"uuid\";\nimport { IService } from \"../db/interfaces\";\nimport Schema from \"../db/serviceSchema\";\nimport Service from \"../models/service\";\n\nexport class ServiceController {\n  constructor() {}\n\n  private mapItems(model: IService[]): Service[] {\n    let _data = [];\n    for (let i = 0; i < model.length; i++) {\n      _data.push(this.mapItem(model[i]));\n    }\n    return _data;\n  }\n\n  private mapItem(model: IService): Service {\n    const _data = new Service();\n    _data.active = model.active;\n    _data.description = model.description;\n    _data.id = model.id;\n    _data.shortDescription = model.shortDescription;\n\n    return _data;\n  }\n\n  getAll = (req: Request, res: Response) => {\n    Schema.find({ active: true }, (err, data) => {\n      if (err) return res.status(500).send({ message: err.message });\n      const _data = this.mapItems(data);\n      return res.status(200).send(_data);\n    });\n  };\n\n  getOne = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findById(req.params.id, (err, data: IService) => {\n        if (err) return res.status(500).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(200).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  create = (req: Request, res: Response) => {\n    try {\n      if (!req.body || !req.body.description || !req.body.shortDescription) {\n        return res.status(400).send();\n      }\n\n      const _model = new Service();\n      _model.id = uuid();\n      _model.active = true;\n      _model.description = req.body.description;\n      _model.shortDescription = req.body.shortDescription;\n\n      Schema.create(_model, (err: Error, data: IService) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(201).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  update = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      const description = req.body.description ? req.body.description : \"\";\n      const shortDesc = req.body.shortDescription\n        ? req.body.shortDescription\n        : \"\";\n\n      if (description.length == 0 || shortDesc.length == 0) {\n        return res\n          .status(400)\n          .send({ message: \"description is null or empty\" });\n      }\n\n      const _model = new Schema({\n        description: description,\n        shortDesc: shortDesc\n      });\n\n      Schema.findByIdAndUpdate(req.params.id, _model, (err: Error) => {\n        if (err) return res.status(400).send({ message: err.message });\n        return res.status(200).send();\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  deactivate = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findByIdAndUpdate(\n        req.params.id,\n        { active: false },\n        (err: Error) => {\n          if (err) return res.status(400).send({ message: err.message });\n          return res.status(204).send();\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new ServiceController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/serviceController\";\n\nexport class ServiceRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/v1/admin/service', controller.getAll);\n        router.get('/v1/admin/service/:id', controller.getOne);\n        router.post('/v1/admin/service', controller.create);\n        router.put('/v1/admin/service/:id', controller.update);\n        router.delete('/v1/admin/service/:id', controller.deactivate);\n    }\n}","import { IDuration } from \"./interfaces\";\nimport dataAccess from \"./dataAccess\";\nimport * as validator from \"mongoose-unique-validator\";\nimport * as mongoose from \"mongoose\";\n\nexport class DurationSchema {\n  id?: string;\n  display?: string;\n  price?: number;\n  active?: boolean;\n\n  public get schema(): mongoose.Schema {\n    const _schema = new mongoose.Schema(\n      {\n        id: {\n          type: String,\n          required: [true, \"is required\"],\n          index: true\n        },\n        display: {\n          type: String,\n          require: [true, \"is required\"],\n          unique: true,\n          lowercase: true\n        },\n        price: {\n          type: Number,\n          require: [true, \"is required\"],\n          unique: true\n        },\n        active: {\n          type: Boolean,\n          required: [true, \"is required\"],\n          default: true\n        }\n      },\n      { timestamps: true }\n    );\n\n    _schema.plugin(validator, { message: \"is already taken\" });\n\n    return _schema;\n  }\n}\n\nconst model = dataAccess.dbConnection.model<IDuration>(\n  \"Duration\",\n  new DurationSchema().schema\n);\nexport default model;\n","export default class Duration {\n    id?: string;\n    display?: string;\n    price?: number;\n    active?: boolean;\n  }\n  ","import { Request, Response } from \"express\";\nimport * as uuid from \"uuid\";\nimport Schema from \"../db/durationSchema\";\nimport { IDuration } from \"../db/interfaces\";\nimport Duration from \"../models/duration\";\n\nexport class DurationController {\n  constructor() {}\n\n  private mapItems(model: IDuration[]): Duration[] {\n    let _data = [];\n    for (let i = 0; i < model.length; i++) {\n      _data.push(this.mapItem(model[i]));\n    }\n    return _data;\n  }\n\n  private mapItem(model: IDuration): Duration {\n    const _data = new Duration();\n    _data.active = model.active;\n    _data.display = model.display;\n    _data.id = model.id;\n    _data.price = model.price;\n    return _data;\n  }\n\n  getAll = (req: Request, res: Response) => {\n    Schema.find({ active: true }, (err, data) => {\n      if (err) return res.status(500).send({ message: err.message });\n      const _data = this.mapItems(data);\n      return res.status(200).send(_data);\n    });\n  };\n\n  getOne = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findById(req.params.id, (err, data: IDuration) => {\n        if (err) return res.status(500).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(200).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  create = (req: Request, res: Response) => {\n    try {\n      if (!req.body || !req.body.description || !req.body.display) {\n        return res.status(400).send();\n      }\n\n      const _model = new Duration();\n      _model.id = uuid();\n      _model.active = true;\n      _model.display = req.body.display;\n      _model.price = req.body.price;\n\n      Schema.create(_model, (err: Error, data: IDuration) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(201).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  update = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      const price = req.body.price ? req.body.price : \"\";\n      const disp = req.body.display ? req.body.display : \"\";\n\n      if (price > 0 || disp.length == 0) {\n        return res\n          .status(400)\n          .send({ message: \"description or display is null or empty\" });\n      }\n\n      const _model = new Schema({\n        display: disp,\n        price: price\n      });\n\n      Schema.findByIdAndUpdate(req.params.id, _model, (err: Error) => {\n        if (err) return res.status(400).send({ message: err.message });\n        return res.status(200).send();\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  deactivate = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findByIdAndUpdate(\n        req.params.id,\n        { active: false },\n        (err: Error) => {\n          if (err) return res.status(400).send({ message: err.message });\n          return res.status(204).send();\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new DurationController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/durationController\";\n\nexport class DurationRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/v1/admin/duration', controller.getAll);\n        router.get('/v1/admin/duration/:id', controller.getOne);\n        router.post('/v1/admin/duration', controller.create);\n        router.put('/v1/admin/duration/:id', controller.update);\n        router.delete('/v1/admin/duration/:id', controller.deactivate);\n    }\n}","import UserType from \"./userType\";\n\nexport default class ApiUser {\n  id?: string;\n  username?: string;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  userType?: UserType;\n  active?: boolean;\n  tokenValidated?: boolean;\n  validationToken?: string;\n}\n","import { Request, Response } from \"express\";\nimport * as uuid from \"uuid\";\nimport Schema from \"../db/apiUserSchema\";\nimport UserTypeSchema from \"../db/userTypeSchema\";\nimport { IApiUser } from \"../db/interfaces\";\nimport User from \"../models/apiUser\";\nimport UserType from \"../models/userType\";\nimport { BaseController } from \"./baseController\";\n\nexport class ApiUserController extends BaseController {\n  private username:string;\n  private email:string;\n  private firstName:string;\n  private lastName:string;\n  private password:string;\n  private type:string;\n\n  constructor() {\n    super();\n\n    this.username='';\n    this.email='';\n    this.firstName='';\n    this.lastName='';\n    this.password='';\n    this.type='';\n  }\n\n\n  private mapItems(model: {}[]): User[] {\n    let _data = [];\n\n    for (let i = 0; i < model.length; i++) {\n      _data.push(this.mapItem(model[i]));\n    }\n\n    return _data;\n  }\n\n  private mapItem(model: {}): User {\n    const _data = new User();\n    const _model = JSON.parse(JSON.stringify(model));\n    const _type = new UserType();\n\n    _type.id = this.encryptData(_model.userType[0].id);\n    _type.display = this.encryptData(_model.userType[0].display);\n    _type.description = this.encryptData(_model.userType[0].description);\n    _type.active = _model.userType[0].active;\n\n    _data.active = _model.active;\n    _data.email = this.encryptData(_model.email);\n    _data.firstName = this.encryptData(_model.firstName);\n    _data.id = this.encryptData(_model.id);\n    _data.lastName = this.encryptData(_model.lastName);\n    _data.tokenValidated = _model.tokenValidated;\n    _data.username = this.encryptData(_model.username);\n    _data.userType = _type;\n\n    return _data;\n  }\n\n  getAll = (req: Request, res: Response) => {\n    try {\n\n      Schema.aggregate([\n        { $match: {'active': true }},\n        { $lookup: {\n          from: 'usertypes',\n          localField: 'userTypeId',\n          foreignField: '_id',\n          as : 'userType'\n        }},\n        { $sort: {'username': 1}},\n        {$limit: 200}\n\n      ])\n      .exec((err: Error, data) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItems(data);\n        return res.status(200).send(_data);\n      });\n      \n      return;\n      \n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  getOne = (req: Request, res: Response) => {\n    try {\n\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.aggregate([\n        { $match: {'id': req.params.id, 'active': true }},\n        { $lookup: {\n          from: 'usertypes',\n          localField: 'userTypeId',\n          foreignField: '_id',\n          as : 'userType'\n        }},\n        {$limit: 1}\n      ])\n      .exec((err: Error, data) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItems(data);\n        return res.status(200).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  create = (req: Request, res: Response) => {\n    try {\n\n      if (\n        !req.body ||\n        !req.body.email ||\n        !req.body.firstName ||\n        !req.body.lastName ||\n        !req.body.username ||\n        !req.body.password\n      ) {\n        return res.status(400).send({ message: \"missing data item(s)\" });\n      }\n\n      let _targetType='';\n\n      this.email = req.body.email;\n      this.firstName = req.body.firstName;\n      this.lastName = req.body.lastName;\n      this.username = req.body.username;\n      this.password = req.body.password;\n      this.type = req.body.type;\n\n      if(this.email == ''){\n        return res.status(400).send({message: 'failed to decrypt'});\n      }\n\n      UserTypeSchema.findOne({ active: true, 'display': this.type }, (err, data) => {\n\n        if (err) return res.status(400).send({ message: err.message });\n        \n        if(data) _targetType = data._id;\n        \n        return;\n\n      }).then(() => {\n\n        if(_targetType) {\n\n          const _model = new Schema({\n            id: uuid(),\n            email: this.email,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            username: this.username,\n            userTypeId: _targetType,\n          });\n\n          if (!_model.setPassword(this.password)) {\n            return res\n              .status(400)\n              .send({ message: \"password does not match criteria\" });\n          }\n\n          if (!_model.generateValidationToken()) {\n            return res\n              .status(400)\n              .send({ message: \"error occured while generating token\" });\n          }\n\n          Schema.create(_model, (err: Error, data: IApiUser) => {\n            if (err) return res.status(400).send({ message: err.message });\n            return res.status(201).send({message: 'created'});\n          });\n\n        }\n\n        return;\n\n      });\n\n      return;\n     \n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  update = (req: Request, res: Response) => {\n    try {\n\n      if (!req.params || !req.params.id) {\n        return res.status(400).send({ message: \"target id is invalid\" });\n      }\n\n      if (\n        !req.body ||\n        !req.body.firstName ||\n        !req.body.lastName ||\n        !req.body.username\n      ) {\n        return res.status(400).send();\n      }\n\n      const _firstName = req.body.firstName ? req.body.firstName : \"\";\n      const _lastName = req.body.lastName ? req.body.lastName : \"\";\n\n      if (_firstName.length == 0 || _lastName.length == 0) {\n        return res\n          .status(400)\n          .send({ message: \"missing and null or empty data\" });\n      }\n\n      const _model = new Schema({\n        firstName: _firstName,\n        lastName: _lastName\n      });\n\n      Schema.findByIdAndUpdate({'id': req.params.id }, _model, (err: Error) => {\n        if (err) return res.status(400).send({ message: err.message });\n        return res.status(200).send();\n      });\n\n      return;\n\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  deactivate = (req: Request, res: Response) => {\n    try {\n\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findByIdAndUpdate(\n        req.params.id,\n        { active: false },\n        (err: Error) => {\n          if (err) return res.status(400).send({ message: err.message });\n          return res.status(204).send({message: 'deactivated'});\n        }\n      );\n\n      return;\n\n    } catch (err) {\n      return res.send(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new ApiUserController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/apiUserController\";\n\nexport class ApiUserRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/v1/apiuser', controller.getAll);\n        router.get('/v1/apiuser/:id', controller.getOne);\n        router.post('/v1/apiuser', controller.create);\n        router.put('/v1/apiuser/:id', controller.update);\n        router.delete('/v1/apiuser/:id', controller.deactivate);\n    }\n}","export default class ValidClient {\n    id?: string;\n    ipAddress?: string;\n    name?: string;\n    description?: string;\n    contactName?: string;\n    email?: string;\n    phoneNumber?: number;\n    token?: string;\n    active?: boolean;\n  }\n  ","import { Request, Response } from \"express\";\nimport * as uuid from \"uuid\";\nimport { IValidClient } from \"../db/interfaces\";\nimport Schema from \"../db/validClientSchema\";\nimport ValidClient from \"../models/validClient\";\n\nexport class ValidClientController {\n  constructor() {}\n\n  private mapItems(model: IValidClient[]): ValidClient[] {\n    let _data = [];\n    for (let i = 0; i < model.length; i++) {\n      _data.push(this.mapItem(model[i]));\n    }\n    return _data;\n  }\n\n  private mapItem(model: IValidClient): ValidClient {\n    console.log(\"_id\", model._id);\n    const _data = new ValidClient();\n    _data.active = model.active;\n    _data.contactName = model.contactName;\n    _data.description = model.description;\n    _data.email = model.email;\n    _data.id = model.id;\n    _data.ipAddress = model.ipAddress;\n    _data.name = model.name;\n    _data.phoneNumber = model.phoneNumber;\n\n    return _data;\n  }\n\n  getAll = (req: Request, res: Response) => {\n    Schema.find({ active: true }, (err, data) => {\n      if (err) return res.status(500).send({ message: err.message });\n      const _data = this.mapItems(data);\n\n      return res.status(200).send(_data);\n    });\n  };\n\n  getOne = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findById(req.params.id, (err, data: IValidClient) => {\n        if (err) return res.status(500).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(200).send(data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  create = (req: Request, res: Response) => {\n    try {\n      if (\n        !req.body.active ||\n        !req.body.contactname ||\n        !req.body.description ||\n        !req.body.email ||\n        !req.body.ipaddress ||\n        !req.body.name ||\n        !req.body.phonenumber\n      ) {\n        return res.status(400).send({ message: \"required data is missing\" });\n      }\n\n      const _model = new Schema({\n        id: uuid(),\n        active: true,\n        contactName: req.body.contactname,\n        description: req.body.description,\n        email: req.body.email,\n        ipAddress: req.body.ipaddress,\n        name: req.body.name,\n        phoneNumber: req.body.phonenumber\n      });\n\n      _model.generateValidationToken();\n\n      Schema.create(_model, (err: Error, data: IValidClient) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(201).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  update = (req: Request, res: Response) => {\n    try {\n      if (\n        !req.body.contactname ||\n        !req.body.description ||\n        !req.body.email ||\n        !req.body.fdnq ||\n        !req.body.ipaddress ||\n        !req.body.name ||\n        !req.body.phonenumber\n      ) {\n        return res.status(400).send({ message: \"required data is missing\" });\n      }\n\n      const _model = new ValidClient();\n      _model.contactName = req.body.contactname;\n      _model.description = req.body.description;\n      _model.email = req.body.email;\n      _model.ipAddress = req.body.ipaddress;\n      _model.name = req.body.name;\n      _model.phoneNumber = req.body.phonenumber;\n\n      Schema.findByIdAndUpdate(req.params.id, _model, (err: Error) => {\n        if (err) return res.status(400).send({ message: err.message });\n        return res.status(200).send();\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  deactivate = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findByIdAndUpdate(\n        req.params.id,\n        { active: false, token: \"\" },\n        (err: Error) => {\n          if (err) return res.status(400).send({ message: err.message });\n          return res.status(204).send();\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new ValidClientController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/validClientController\";\n\nexport class ValidClientRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/v1/admin/client', controller.getAll);\n        router.get('/v1/admin/client/:id', controller.getOne);\n        router.post('/v1/admin/client', controller.create);\n        router.put('/v1/admin/client/:id', controller.update);\n        router.delete('/v1/admin/client/:id', controller.deactivate);\n    }\n}","export default class ClientInfo {\n    hostname?: string;\n    ip?: string;\n    forwared?: string;\n  }\n  ","import { Request, Response } from \"express\";\nimport ClientInfo from \"../models/clientInfo\";\n\nexport class ClientInfoController {\n  constructor() {}\n\n  getAll = (req: Request, res: Response) => {\n    const _data = new ClientInfo();\n    _data.hostname = req.hostname;\n    _data.ip = req.connection.remoteAddress;\n    _data.forwared = req.headers.forwarded ? req.headers.forwarded : \"\";\n\n    return res.status(200).send(_data);\n  };\n}\n\nexport default new ClientInfoController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/clientController\";\n\nexport class ClientInfoRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/clientinfo', controller.getAll);\n    }\n}","import { Request, Response } from \"express\";\nimport * as jwt from \"jsonwebtoken\";\nimport * as configInfo from \"../config/db.config.json\";\nimport Schema from \"../db/apiUserSchema\";\nimport { IApiUser, IDecoded } from \"../db/interfaces\";\nimport { BaseController } from \"./baseController\";\n\n\nexport class loginController extends BaseController{\n  private username:string;\n  private password:string;\n\n  constructor() {\n    super()\n    this.username='';\n    this.password='';\n  }\n\n  login = (req: Request, res: Response) => {\n    \n    try {\n\n      if (!req.body.username || !req.body.password) {\n        return res.status(400).send();\n      }\n\n      this.username = this.decryptData(req.body.username);\n      this.password = this.decryptData(req.body.password);\n\n      Schema.findOne({ username: this.username }).exec(\n        (err: Error, data: IApiUser) => {\n          if (err) return res.status(400).send({ message: err.message });\n\n          if (data) {\n            if (!data.validPassword(this.password)) {\n              return res\n                .status(400)\n                .send({ message: \"either username or password in incorrect!\" });\n            }\n\n            if (!data.tokenValidated) {\n              return res\n                .status(301)\n                .send({ message: \"please validate your email\" });\n            }\n\n            return res.status(200).send({ message: \"Welcome back!\" });\n          }\n\n          return res.status(400).send({ message: \"user does not exist\" });\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  resetPassword = (req: Request, res: Response) => {\n    try {\n      if (!req.body.username || !req.body.password) {\n        return res.status(400).send();\n      }\n\n      Schema.findOne({ username: req.body.user }).exec(\n        (err: Error, data: IApiUser) => {\n          if (err) return res.status(400).send({ message: err.message });\n\n          if (data) {\n            if (!data.setPassword(req.body.password)) {\n              return res\n                .status(400)\n                .send(\"either username or password in incorrect!\");\n            } else {\n              Schema.findByIdAndUpdate(\n                data._id,\n                { salt: data.salt, password_hash: data.password_hash },\n                (err: Error) => {\n                  if (err)\n                    return res.status(400).send({ message: err.message });\n                  return res.status(200).send();\n                }\n              );\n            }\n          }\n\n          return res.status(417).send();\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  validateEmailToken = (req: Request, res: Response) => {\n    try {\n      if (!req.params.token) {\n        return res.status(400).send();\n      }\n\n      const _decoded = <IDecoded>(\n        jwt.verify(req.params.token, configInfo.secret)\n      );\n\n      if (!_decoded) {\n        return res.status(400).send({ message: \"decoding failure\" });\n      } else {\n        if (_decoded.exp > Date.now() / 1000) {\n          Schema.findByIdAndUpdate(\n            _decoded.id,\n            { tokenValidated: true },\n            (err: Error) => {\n              if (err) return res.status(400).send(err.message);\n\n              return res.status(200).send();\n            }\n          );\n        }\n\n        return res.status(400).send({ message: \"Token expired\" });\n      }\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new loginController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/loginController\";\n\nexport class LoginRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.post('/v1/login/:token', controller.validateEmailToken);\n        router.post('/v1/login', controller.login);\n        router.post('/v1/resetpass', controller.resetPassword);\n    }\n}","import { Request, Response } from \"express\";\nimport * as uuid from \"uuid\";\nimport { IUserType } from \"../db/interfaces\";\nimport Schema from \"../db/userTypeSchema\";\nimport UserType from \"../models/userType\";\n\nexport class UserTypeController {\n  constructor() {}\n\n  private mapItems(model: IUserType[]): UserType[] {\n    let _data = [];\n    for (let i = 0; i < model.length; i++) {\n      _data.push(this.mapItem(model[i]));\n    }\n    return _data;\n  }\n\n  private mapItem(model: IUserType): UserType {\n    console.log(\"type: \" + model.display, model._id);\n    const _data = new UserType();\n    _data.active = model.active;\n    _data.description = model.description;\n    _data.display = model.display;\n    _data.id = model.id;\n\n    return _data;\n  }\n\n  getAll = (req: Request, res: Response) => {\n    Schema.find({ active: true }, (err, data) => {\n      if (err) return res.status(500).send({ message: err.message });\n      console.log('data', data);\n      const _data = this.mapItems(data);\n      return res.status(200).send(_data);\n    });\n  };\n\n  getOne = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findById(req.params.id, (err, data: IUserType) => {\n        if (err) return res.status(500).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(200).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  create = (req: Request, res: Response) => {\n    try {\n      if (!req.body || !req.body.description || !req.body.display) {\n        return res.status(400).send();\n      }\n\n      const _model = new UserType();\n      _model.id = uuid();\n      _model.description = req.body.description;\n      _model.display = req.body.display;\n      _model.active = true;\n\n      Schema.create(_model, (err: Error, data: IUserType) => {\n        if (err) return res.status(400).send({ message: err.message });\n        const _data = this.mapItem(data);\n        return res.status(201).send(_data);\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  update = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      const desc = req.body.description ? req.body.description : \"\";\n      const disp = req.body.display ? req.body.display : \"\";\n\n      if (desc.length == 0 || disp.length == 0) {\n        return res\n          .status(400)\n          .send({ message: \"description or display is null or empty\" });\n      }\n\n      const _userType = {\n        description: desc,\n        display: disp\n      };\n\n      Schema.findByIdAndUpdate(req.params.id, _userType, (err: Error) => {\n        if (err) return res.status(400).send({ message: err.message });\n        return res.status(200).send();\n      });\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n\n  deactivate = (req: Request, res: Response) => {\n    try {\n      if (!req.params || !req.params.id) {\n        return res.status(400).send();\n      }\n\n      Schema.findByIdAndUpdate(\n        req.params.id,\n        { active: false },\n        (err: Error) => {\n          if (err) return res.status(400).send({ message: err.message });\n          return res.status(204).send();\n        }\n      );\n\n      return;\n    } catch (err) {\n      return res.status(400).send({ message: err.message });\n    }\n  };\n}\n\nexport default new UserTypeController();\n","import { BaseRoute } from \"./baseRouter\";\nimport { Router} from \"express\";\nimport controller from \"../controllers/userTypeController\";\n\nexport class UserTypeRoute extends BaseRoute {\n   \n    constructor() {\n        super();\n    }\n\n    public static map(router: Router) {\n        router.get('/v1/admin/usertype', controller.getAll);\n        router.get('/v1/admin/usertype/:id', controller.getOne);\n        router.post('/v1/admin/usertype', controller.create);\n        router.put('/v1/admin/usertype/:id', controller.update);\n        router.delete('/v1/admin/usertype/:id', controller.deactivate);\n    }\n}","import app from './app'\n\nconst port = 3001;\nconst host = '127.0.0.1';\n\napp.run(port, host);\n"],"sourceRoot":""}